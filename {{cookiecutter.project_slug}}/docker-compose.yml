services:
  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/code/backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: {{cookiecutter.project_slug}}_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: {{cookiecutter.project_slug}}_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{cookiecutter.project_slug}}_user"]
      interval: 5s
      retries: 5
      timeout: 5s

volumes:
  postgres_data:

